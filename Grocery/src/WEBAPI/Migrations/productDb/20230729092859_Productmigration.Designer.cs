// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentData;

#nullable disable

namespace WEBAPI.Migrations.productDb
{
    [DbContext(typeof(productDbContext))]
    [Migration("20230729092859_Productmigration")]
    partial class Productmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductModal.MyProducts", b =>
                {
                    b.Property<string>("productid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageurl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageurl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageurl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subcategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productid");

                    b.ToTable("Allproducts");
                });

            modelBuilder.Entity("ProductModal.brand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("brandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("brands");
                });

            modelBuilder.Entity("ProductModal.category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("categoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("ProductModal.subcategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("categoryid")
                        .HasColumnType("int");

                    b.Property<string>("subcategoryname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.ToTable("subcategories");
                });

            modelBuilder.Entity("ProductModal.subcategory", b =>
                {
                    b.HasOne("ProductModal.category", null)
                        .WithMany("subcategory")
                        .HasForeignKey("categoryid");
                });

            modelBuilder.Entity("ProductModal.category", b =>
                {
                    b.Navigation("subcategory");
                });
#pragma warning restore 612, 618
        }
    }
}
